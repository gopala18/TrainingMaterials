-QUE 15 Generate a report like ‘worker works for manager’ in the order of their seniority  Ramesh works for Suresh Suresh works for Naresh
 SELECT sales.salesrep_name||'works for'||saless.mgr AS manager
 FROM salesrep sales  JOIN salesrep saless
 ON saless.salesrep_id=sales.mgr

--QUE 16.Write a PL/PGSQL function that takes Salesrep_id and date as an input returns the total sales processed by him for the day.
   CREATE OR REPLACE FUNCTION total_saless(salesrepid CHARACTER(10),orderdate dATE)
   RETURNS INTEGER
   AS
   $TOTALSALE_INTEGER$
   DECLARE totalsale INT;
   BEGIN 
   SELECT COUNT(order_master.order_code) INTO totalsale
   FROM order_master    
   WHERE order_master.order_date = orderdate AND order_master.salesrep_id=salesrepid
   GROUP BY order_master.salesrep_id;
   RETURN totalsale;
   END;
     $TOTALSALE_INTEGER$
    LANGUAGE plpgsql;

   SELECT total_saless('SP01','2008-03-06');

   
   
   --QUE 12.Generate the report like
SELECT CUSTOMER.CUSTOMER_NAME,ORDER_MASTER.ORDER_CODE,ORDER_MASTER.ORDER_DATE,COUNT(CUSTOMER.CUSTOMER_CODE),SUM(ORDER_DETAIL.QTY_ORDERED * PRODUCT.PRICE) AS BILL
FROM CUSTOMER INNER JOIN ORDER_MASTER 
ON CUSTOMER.CUSTOMER_CODE=ORDER_MASTER.CUSTOMER_CODE
INNER JOIN ORDER_DETAIL 
ON ORDER_MASTER.ORDER_CODE=ORDER_DETAIL.ORDER_CODE
INNER JOIN PRODUCT
ON ORDER_DETAIL.PRODUCT_CODE=PRODUCT.PRODUCT_CODE
GROUP BY CUSTOMER.CUSTOMER_NAME,ORDER_MASTER.ORDER_CODE,ORDER_MASTER.ORDER_DATE


--QUE 10 Which is the costliest order? (Calculate the bill)
--WITHOUT JOINS
  SELECT ORDER_DETAIL.ORDER_CODE, SUM(ORDER_DETAIL.QTY_ORDERED * PRODUCT.PRICE) 
  FROM ORDER_DETAIL,PRODUCT
  WHERE ORDER_DETAIL.PRODUCT_CODE=PRODUCT.PRODUCT_CODE
  GROUP BY ORDER_DETAIL.ORDER_CODE
  HAVING SUM(ORDER_DETAIL.QTY_ORDERED * PRODUCT.PRICE)>=ALL(SELECT SUM(ORDER_DETAIL.QTY_ORDERED * PRODUCT.PRICE) 
								FROM ORDER_DETAIL,PRODUCT
								WHERE ORDER_DETAIL.PRODUCT_CODE=PRODUCT.PRODUCT_CODE
								GROUP BY ORDER_DETAIL.ORDER_CODE)
--WITH JOINS
SELECT ORDER_CODE,SUM(ORDER_DETAIL.QTY_ORDERED * PRODUCT.PRICE) AS BILL
FROM ORDER_DETAIL INNER JOIN PRODUCT
ON ORDER_DETAIL.PRODUCT_CODE=PRODUCT.PRODUCT_CODE
GROUP BY ORDER_DETAIL.ORDER_CODE
HAVING SUM(ORDER_DETAIL.QTY_ORDERED * PRODUCT.PRICE)>=ALL(
							  SELECT SUM(ORDER_DETAIL.QTY_ORDERED * PRODUCT.PRICE) AS BILL
							  FROM ORDER_DETAIL INNER JOIN PRODUCT 
							  ON ORDER_DETAIL.PRODUCT_CODE=PRODUCT.PRODUCT_CODE
							  GROUP BY ORDER_DETAIL.ORDER_CODE)

